{"version":3,"sources":["components/Controls.js","App.js","reportWebVitals.js","index.js"],"names":["Controls","props","state","words","a","fetch","response","json","data","this","setState","loading","eng","ger","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAmCeA,E,kDA/Bb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACCC,MAAQ,CACXC,MAAO,IAHM,E,4FAOnB,8BAAAC,EAAA,4DACc,sDADd,SAEyBC,MADX,uDADd,cAEQC,EAFR,gBAGqBA,EAASC,OAH9B,OAGQC,EAHR,OAIEC,KAAKC,SAAS,CAACP,MAAOK,EAAK,GAAIG,SAAS,IAJ1C,gD,0EAOA,WACE,OACE,gCACE,qDACGF,KAAKP,MAAMS,UAAYF,KAAKP,MAAMC,MACjC,6CAEE,4CACUM,KAAKP,MAAMC,MAAMS,IAD3B,IACgC,uBADhC,WAESH,KAAKP,MAAMC,MAAMU,c,GAzBjBC,aCSRC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.13d05ad2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Controls extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n      this.state = {\r\n        words: []\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const url = 'http://language-lighthouse.herokuapp.com/api/german'\r\n    const response = await fetch(url)\r\n    const data = await response.json()\r\n    this.setState({words: data[0], loading: false})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n        <h1>Language LightHouse</h1>\r\n          {this.state.loading || !this.state.words ? (\r\n            <div>loading...</div>\r\n          ) : (\r\n              <div>\r\n              English: {this.state.words.eng} <br/>\r\n              German: {this.state.words.ger}\r\n              </div>\r\n          )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Controls\r\n","import './App.css';\nimport Controls from './components/Controls.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Controls/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}